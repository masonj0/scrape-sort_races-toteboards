{
    "filepath": "src/checkmate_v7/models.py",
    "content": "\"\"\"\nCheckmate V7: `models.py` - THE BLUEPRINT\n\"\"\"\nfrom datetime import datetime\nfrom typing import List, Optional\nfrom sqlalchemy import (Column, Integer, String, Float, DateTime, Boolean, JSON,\n ForeignKey)\nfrom sqlalchemy.orm import declarative_base, relationship\nfrom pydantic import BaseModel\n\nBase = declarative_base()\n\n# --- ORM Models ---\n\nclass PredictionORM(Base):\n    __tablename__ = 'predictions'\n    prediction_id = Column(String, primary_key=True)\n    race_key = Column(String, nullable=False, index=True)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    race_local_datetime = Column(DateTime, nullable=True) # The post time of the race\n    model_version = Column(String, nullable=False)\n    status = Column(String, default='pending', index=True)\n    score_total = Column(Float)\n    # Other fields would be here in a full implementation...\n    \n    # Placeholder for relationship, will need ResultORM and JoinORM\n    # join = relationship(\"JoinORM\", back_populates=\"prediction\", uselist=False)\n\n# --- Pydantic Schemas ---\n\nclass PredictionSchema(BaseModel):\n    prediction_id: str\n    race_key: str\n    status: str\n    minutes_to_post: float\n    score_total: Optional[float] = None\n\n    class Config:\n        from_attributes = True\n"
}