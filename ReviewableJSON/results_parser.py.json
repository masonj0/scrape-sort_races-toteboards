{
    "file_path": "results_parser.py",
    "content": "#!/usr/bin/env python3\n# ==============================================================================\n#  Fortuna Faucet: The Chart Parser (The Carpenter)\n# ==============================================================================\n# This module is responsible for parsing the complex, semi-structured text\n# extracted from Equibase PDF race charts.\n# ==============================================================================\n\nimport re\n\nclass ChartParser:\n    \"\"\"A sophisticated parser for Equibase PDF chart text.\"\"\"\n\n    def count_runners(self, chart_text: str) -> int:\n        \"\"\"\n        Counts the number of runners in a race by parsing the 'Past Performance\n        Running Line Preview' section, which is a reliable indicator of field size.\n        \"\"\"\n        lines = chart_text.split('\\n')\n        in_running_line_section = False\n        runner_count = 0\n\n        for line in lines:\n            # Heuristic to detect the start of the relevant section\n            if 'Past Performance Running Line Preview' in line:\n                in_running_line_section = True\n                continue\n\n            if in_running_line_section:\n                # Stop if we hit a blank line or the next major section\n                if not line.strip() or 'Trainers:' in line:\n                    break\n\n                # A valid runner line starts with a program number\n                if re.match(r'^\\d+', line.strip()):\n                    runner_count += 1\n\n        return runner_count\n\n# --- Example Usage (for testing and demonstration) ---\nif __name__ == '__main__':\n    # This is a sample text block based on the 'Rosetta Stone' provided by the Project Lead\n    SAMPLE_TEXT = (\"\"\"Last Raced Pgm Horse Name (Jockey) Wgt M/E PP Start 1/4 1/2 3/4 Str Fin Odds Comments\n19Aug23 7ELP8 11 J J's Joker (Arrieta, Francisco) 120 L 11 1 41/2 51/2 51 21/2 11/2 7.08 4-3p,5w1/4,bid1/8,edgd\n3Sep23 7KD7 2 Peek (Saez, Luis) 120 L 2 3 11/2 11/2 11 11 1/2 22 11.53 ins,dug in 2p1/8,bestd\n15Sep23 1CD4 1 Game Warden (Gaffalione, Tyler) 120 L 1 2 52 41 41/2 31 3Neck 2.81* ins,aim btw1/4,lck bid\nTotal WPS Pool: $280,617\nPgm Horse Win Place Show\n11 J J's Joker 16.16 8.00 5.78\n2 Peek 10.80 6.22\n1 Game Warden 3.78\nPast Performance Running Line Preview\nPgm Horse Name Start 1/4 1/2 3/4 Str Fin\n11 J J's Joker 1 42 1/2 53 1/2 52 1/2 21 1/2 11/2\n2 Peek 3 11/2 11/2 11 11 1/2 21/2\n1 Game Warden 2 53 42 1/2 42 32 32 1/2\n4 Runningforjoy 9 75 1/2 64 63 1/2 53 42 3/4\n5 Archie the Giza 7 96 1/2 87 85 1/2 64 1/2 54 1/4\n8 Cafe Racer 4 21/2 21/2 31 43 65\n9 Barnstorming 5 31 31 1/2 21 76 1/2 711 1/4\n6 Cashmeup 8 65 75 1/2 74 87 1/2 811 1/2\n10 Texas Pride 12 1214 1/2 1213 1/2 1114 1113 3/4 913\n3 Active Duty 6 86 1/2 1110 1214 1/4 1013 1/2 1013 1/2\n12 Surface to Air 10 108 99 97 1/2 911 1114\n7 Dr Kringle 11 119 1/2 1010 108 1214 3/4 1217 3/4\nTrainers: 11 - Hartman, Chris; 2 - Arnold, II, George; 1 - Joseph, Jr, Saffie; 4 - Tomlinson, Michael; 5 - Medina, Robert; 8 - Stall, Jr, Albert; 9 - Cox, Brad;\n\"\"\")\n\n    print(\"--- Testing ChartParser with sample data ---\")\n    parser = ChartParser()\n    runner_count = parser.count_runners(SAMPLE_TEXT)\n\n    print(f\"Runner count found: {runner_count}\")\n    # Expected Output: 12\n    assert runner_count == 12\n    print(\"Test passed!\")"
}