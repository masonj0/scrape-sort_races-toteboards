{
    "filepath": "./hunt.py",
    "content": "import requests\nimport time\nfrom datetime import datetime\n\n# --- Configuration ---\nAPI_URL = \"http://127.0.0.1:8001/api/v1/adapters/status\"\nHUNT_DURATION_SECONDS = 900  # 15 minutes\nPOLL_INTERVAL_SECONDS = 60   # 1 minute\n\ndef hunt_for_signal():\n    \"\"\"\n    Polls the status API until a 'hot signal' is found or the hunt times out.\n    A 'hot signal' is an adapter with status 'OK' and more than 0 races found.\n    \"\"\"\n    print(\"=\"*30)\n    print(\"\ud83d\udd25 OPERATION: HOT SIGNAL - INITIATED \ud83d\udd25\")\n    print(f\"Hunting for a live adapter for {HUNT_DURATION_SECONDS / 60:.0f} minutes...\")\n    print(\"=\"*30)\n\n    start_time = time.time()\n    while time.time() - start_time < HUNT_DURATION_SECONDS:\n        timestamp = datetime.now().strftime('%H:%M:%S')\n        print(f\"[{timestamp}] Polling for hot signal at {API_URL}...\")\n\n        try:\n            response = requests.get(API_URL, timeout=10)\n            response.raise_for_status()  # Raise an exception for bad status codes\n            statuses = response.json()\n\n            for adapter in statuses:\n                if adapter.get(\"status\") == \"OK\" and adapter.get(\"races_found\", 0) > 0:\n                    print(\"\\n\" + \"=\"*30)\n                    print(\"\ud83d\udd25 HOT SIGNAL DETECTED! \ud83d\udd25\")\n                    print(\"=\"*30)\n                    print(f\"  - Adapter: {adapter.get('adapter_id')}\")\n                    print(f\"  - Races Found: {adapter.get('races_found')}\")\n                    print(f\"  - Status: {adapter.get('status')}\")\n                    print(f\"  - Notes: {adapter.get('notes')}\")\n                    print(\"\\nMission successful. Terminating hunt.\")\n                    return # Exit the function on success\n\n            print(\"...no hot signal found on this poll. Will try again in 1 minute.\")\n\n        except requests.exceptions.RequestException as e:\n            print(f\"  -> API Error: Could not connect to the API server. Is it running?\")\n            print(f\"     Details: {e}\")\n\n\n        time.sleep(POLL_INTERVAL_SECONDS)\n\n    print(\"\\n\" + \"=\"*30)\n    print(\" HUNT COMPLETE: TIMEOUT \".center(30, \"=\"))\n    print(\"=\"*30)\n    print(\"No live, data-producing adapter was found in the allotted time.\")\n\nif __name__ == \"__main__\":\n    hunt_for_signal()\n"
}