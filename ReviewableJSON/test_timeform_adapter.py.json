{
    "filepath": "tests/adapters/test_timeform_adapter.py",
    "content": "import pytest\nfrom pathlib import Path\nfrom src.paddock_parser.adapters.timeform_adapter import TimeformAdapter\nfrom src.paddock_parser.base import NormalizedRunner\n\n@pytest.fixture\ndef mock_html():\n    path = Path(__file__).parent / \"timeform.html\"\n    return path.read_text()\n\ndef test_timeform_adapter_parse_races(mock_html):\n    adapter = TimeformAdapter()\n    races = adapter.parse_races(mock_html)\n\n    assert len(races) == 1\n    race = races[0]\n\n    assert race.track_name == \"Haydock Park\"\n    assert race.post_time.strftime(\"%H:%M\") == \"14:00\"\n\n    expected_runners = [\n        NormalizedRunner(name=\"NIGHT TARA (IRE)\", odds=1.25, program_number=1),\n        NormalizedRunner(name=\"OPERA WAVE\", odds=4.0, program_number=2),\n        NormalizedRunner(name=\"MYSTICAL MARIA\", odds=5.5, program_number=3),\n    ]\n\n    assert len(race.runners) == len(expected_runners)\n\n    for i, runner in enumerate(race.runners):\n        assert runner.name == expected_runners[i].name\n        assert runner.odds == expected_runners[i].odds\n"
}