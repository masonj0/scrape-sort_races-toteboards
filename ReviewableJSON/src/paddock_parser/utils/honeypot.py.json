{
    "file_path": "src/paddock_parser/utils/honeypot.py",
    "content": "from bs4 import BeautifulSoup, Tag\n\ndef is_element_hidden(element: Tag) -> bool:\n    \"\"\"\n    Checks if an element is hidden via inline CSS styles, including its parents.\n    \"\"\"\n    for parent in [element] + list(element.parents):\n        style = parent.get('style', '').lower().replace(' ', '')\n        if 'display:none' in style or 'visibility:hidden' in style:\n            return True\n    return False\n\ndef remove_honeypots(soup: BeautifulSoup) -> BeautifulSoup:\n    \"\"\"\n    Finds and removes likely \"honeypot\" links from a parsed HTML document.\n\n    A honeypot link is an <a> tag that is not visible to a human user,\n    designed to trap web scrapers.\n\n    This function targets links that are explicitly hidden using inline CSS\n    styles like 'display: none' or 'visibility: hidden', checking both the\n    element itself and its parent containers.\n    \"\"\"\n    # Find all links in the document\n    links = soup.find_all('a')\n\n    for link in links:\n        if is_element_hidden(link):\n            link.decompose()\n\n    return soup\n"
}