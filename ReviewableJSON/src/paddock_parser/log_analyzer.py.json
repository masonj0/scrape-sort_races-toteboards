{
    "filepath": "./src/paddock_parser/log_analyzer.py",
    "content": "import re\nfrom collections import Counter\nfrom typing import Dict\n\ndef analyze_log_file(log_file_path: str) -> Dict[str, int]:\n    \"\"\"\n    Analyzes a log file to count occurrences of different log levels.\n\n    Args:\n        log_file_path: The path to the log file.\n\n    Returns:\n        A dictionary with log levels as keys and their counts as values.\n        Returns an empty dictionary if the file cannot be read.\n    \"\"\"\n    log_level_pattern = re.compile(r'\\b(INFO|WARNING|ERROR|DEBUG|CRITICAL)\\b')\n    counts = Counter()\n\n    try:\n        with open(log_file_path, 'r') as f:\n            for line in f:\n                match = log_level_pattern.search(line)\n                if match:\n                    level = match.group(1)\n                    counts[level] += 1\n    except FileNotFoundError:\n        return {}\n    except Exception:\n        return {}\n\n    return dict(counts)\n"
}