{
    "filepath": "./src/paddock_parser/sync_fetcher.py",
    "content": "import random\nimport requests\nfrom tenacity import retry, stop_after_attempt, wait_exponential, retry_if_exception_type\n\nUSER_AGENTS = [\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/603.2.4 (KHTML, like Gecko) Version/10.1.1 Safari/603.2.4\",\n]\n\n@retry(\n    stop=stop_after_attempt(5),\n    wait=wait_exponential(multiplier=1, min=2, max=60),\n    retry=retry_if_exception_type(requests.exceptions.RequestException),\n    reraise=True\n)\ndef post_page_content(url: str, post_data: dict) -> dict:\n    \"\"\"\n    Synchronously sends a POST request with retries and realistic headers.\n    Returns the JSON response as a dictionary.\n    \"\"\"\n    headers = {\n        \"User-Agent\": random.choice(USER_AGENTS),\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n    }\n\n    response = requests.post(url, headers=headers, json=post_data, timeout=30.0)\n    response.raise_for_status()\n    return response.json()\n"
}