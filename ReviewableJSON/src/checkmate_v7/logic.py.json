{
    "filepath": "./src/checkmate_v7/logic.py",
    "content": "from .models import RaceDataSchema\nfrom .settings import settings\n\nclass TrifectaAnalyzer:\n    \"\"\"The corrected analyzer, fully aligned with the settings module.\"\"\"\n\n    def analyze_race(self, race: RaceDataSchema) -> dict:\n        score = 0\n        reasons = []\n        trifecta_factors = {}\n\n        if not race.horses:\n            return {\"qualified\": False, \"checkmateScore\": 0, \"reasons\": [\"No horses data.\"], \"trifectaFactors\": {}}\n\n        horses_with_odds = sorted([h for h in race.horses if h.odds], key=lambda h: h.odds)\n        num_runners = len(horses_with_odds)\n\n        # Field Size Logic - SOURCED FROM SETTINGS\n        if settings.FIELD_SIZE_OPTIMAL_MIN <= num_runners <= settings.FIELD_SIZE_OPTIMAL_MAX:\n            points = settings.FIELD_SIZE_OPTIMAL_POINTS\n            ok = True\n            reason = f\"Optimal field size ({num_runners} runners)\"\n        elif settings.FIELD_SIZE_ACCEPTABLE_MIN <= num_runners <= settings.FIELD_SIZE_ACCEPTABLE_MAX:\n            points = settings.FIELD_SIZE_ACCEPTABLE_POINTS\n            ok = True\n            reason = f\"Acceptable field size ({num_runners} runners)\"\n        else:\n            points = settings.FIELD_SIZE_PENALTY_POINTS\n            ok = False\n            reason = f\"Field size not ideal ({num_runners} runners)\"\n        score += points\n        reasons.append(reason)\n        trifecta_factors[\"fieldSize\"] = {\"points\": points, \"ok\": ok, \"reason\": reason}\n\n        # Favorite and Contention Analysis - SOURCED FROM SETTINGS\n        if num_runners >= 2:\n            favorite, second_favorite = horses_with_odds[0], horses_with_odds[1]\n            if favorite.odds <= settings.MAX_FAV_ODDS:\n                points = settings.FAV_ODDS_POINTS\n                ok = True\n                reason = f\"Favorite odds OK ({favorite.odds})\"\n            else:\n                points = 0\n                ok = False\n                reason = f\"Favorite odds too high ({favorite.odds})\"\n            score += points\n            reasons.append(reason)\n            trifecta_factors[\"favoriteOdds\"] = {\"points\": points, \"ok\": ok, \"reason\": reason}\n\n            if second_favorite.odds >= settings.MIN_2ND_FAV_ODDS:\n                points = settings.SECOND_FAV_ODDS_POINTS\n                ok = True\n                reason = f\"2nd Favorite odds OK ({second_favorite.odds})\"\n            else:\n                points = 0\n                ok = False\n                reason = f\"2nd Favorite odds too low ({second_favorite.odds})\"\n            score += points\n            reasons.append(reason)\n            trifecta_factors[\"secondFavoriteOdds\"] = {\"points\": points, \"ok\": ok, \"reason\": reason}\n        else:\n            reasons.append(\"Not enough runners with odds for full analysis.\")\n\n        # QUALIFICATION_SCORE SOURCED FROM SETTINGS\n        return {\"qualified\": score >= settings.QUALIFICATION_SCORE, \"checkmateScore\": score, \"reasons\": reasons, \"trifectaFactors\": trifecta_factors}"
}