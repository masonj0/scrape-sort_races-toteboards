{"content": "# src/paddock_parser/run.py\n\nimport argparse\nimport logging\nimport asyncio\n\n# Correct, relative imports from within the package\nfrom .pipeline import run_pipeline\nfrom . import __version__\n\ndef main():\n    \"\"\"\n    The main entry point for the Paddock Parser application.\n    \"\"\"\n    # NOTE: The TerminalUI setup in the pipeline will take over logging.\n    # This basicConfig is a fallback.\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\n    \n    parser = argparse.ArgumentParser(\n        description=f\"Paddock Parser NG (Version {__version__}) - A toolkit for analyzing racecards.\"\n    )\n    \n    parser.add_argument(\n        '--source', \n        type=str, \n        help='Specify a single adapter to run (e.g., \"skysports\").'\n    )\n    \n    parser.add_argument(\n        '--min-runners', \n        type=int, \n        default=8,\n        help='The minimum number of runners for a race to be considered interesting.'\n    )\n\n    args = parser.parse_args()\n    \n    # Run the async pipeline using asyncio.run()\n    asyncio.run(run_pipeline(\n        min_runners=args.min_runners, \n        specific_source=args.source\n    ))\n\nif __name__ == \"__main__\":\n    main()\n"}
