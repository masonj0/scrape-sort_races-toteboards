{
    "filepath": "./paddock-parser-ng/run.py",
    "content": "import argparse\nimport asyncio\nfrom paddock_parser.pipeline import run_analysis_pipeline\n\ndef parse_arguments():\n    \"\"\"Parses command-line arguments.\"\"\"\n    parser = argparse.ArgumentParser(description=\"Paddock Parser NG - Horse Racing Analysis Tool\")\n\n    # Core Configuration\n    parser.add_argument('--config', type=str, help='Path to a configuration file.')\n    parser.add_argument('--output', type=str, help='Path to output the report file.')\n\n    # Scoring & Filtering\n    parser.add_argument('--min-score', type=float, default=0.0, help='Minimum score to include in the report.')\n    parser.add_argument('--no-odds-mode', action='store_true', help='Run in \"no odds\" mode, skipping the scoring step.')\n\n    # Field Size Filtering\n    parser.add_argument('--min-field-size', type=int, default=1, help='Minimum number of runners in a race.')\n    parser.add_argument('--max-field-size', type=int, help='Maximum number of runners in a race.')\n\n    # Output Control\n    parser.add_argument('--sort-by', type=str, default='score', choices=['score', 'field_size', 'time'], help='Field to sort the final report by.')\n    parser.add_argument('--limit', type=int, default=10, help='Number of results to display in the report.')\n\n    return parser.parse_args()\n\ndef main():\n    \"\"\"\n    Main entry point for the Paddock Parser NG application.\n    \"\"\"\n    args = parse_arguments()\n    asyncio.run(run_analysis_pipeline(args))\n\nif __name__ == \"__main__\":\n    main()\n"
}