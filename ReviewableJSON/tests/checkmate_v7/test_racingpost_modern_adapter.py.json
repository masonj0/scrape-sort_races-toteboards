{
    "filepath": "./tests/checkmate_v7/test_racingpost_modern_adapter.py",
    "content": "import pytest\nimport os\nfrom unittest.mock import MagicMock\n\nfrom src.checkmate_v7.adapters.AndWereOff import SkySportsAdapter as RacingPostModernAdapter\nfrom src.checkmate_v7.base import DefensiveFetcher\n\n# --- Fixtures ---\n\n@pytest.fixture\ndef mock_fetcher():\n    \"\"\"Provides a MagicMock for the DefensiveFetcher.\"\"\"\n    return MagicMock(spec=DefensiveFetcher)\n\n@pytest.fixture\ndef adapter(mock_fetcher):\n    \"\"\"Provides an adapter instance with a mocked fetcher.\"\"\"\n    return RacingPostModernAdapter(mock_fetcher)\n\n@pytest.fixture\ndef mock_html_data():\n    \"\"\"Provides mock HTML data for a racecard.\"\"\"\n    # This is a simplified version of the HTML structure\n    return \"\"\"\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <title>Racecard</title>\n    </head>\n    <body>\n        <h1 class=\"sdc-site-racing-header__title\">Test Track</h1>\n        <span class=\"sdc-site-racing-header__time\">13:50</span>\n        <div class=\"sdc-site-racing-card__item\">\n            <div class=\"sdc-site-racing-card__number\"><strong>1</strong></div>\n            <h4 class=\"sdc-site-racing-card__name\"><a href=\"#\">Horse One</a></h4>\n            <span class=\"sdc-site-racing-card__betting-odds\">5/1</span>\n        </div>\n        <div class=\"sdc-site-racing-card__item\">\n            <div class=\"sdc-site-racing-card__number\"><strong>2</strong></div>\n            <h4 class=\"sdc-site-racing-card__name\"><a href=\"#\">Horse Two</a></h4>\n            <span class=\"sdc-site-racing-card__betting-odds\">EVS</span>\n        </div>\n    </body>\n    </html>\n    \"\"\"\n\n# --- Tests ---\n\ndef test_fetch_races_end_to_end(adapter, mock_fetcher, mock_html_data):\n    \"\"\"\n    Tests the end-to-end flow of the fetch_races method, mocking the fetcher call.\n    \"\"\"\n    # Given\n    mock_fetcher.get.side_effect = ['<a class=\"sdc-site-racing-meetings__event-link\" href=\"/racing/racecards/test/2025-09-25/12345\"></a>', mock_html_data]\n\n    # When\n    races = adapter.fetch_races()\n\n    # Then\n    assert mock_fetcher.get.call_count == 2\n    assert len(races) == 1\n    assert races[0].track_name == \"Test Track\"\n    assert len(races[0].runners) == 2\n    assert races[0].runners[0].name == \"Horse One\"\n    assert races[0].runners[0].odds == 6.0\n    assert races[0].runners[1].name == \"Horse Two\"\n    assert races[0].runners[1].odds == 2.0"
}