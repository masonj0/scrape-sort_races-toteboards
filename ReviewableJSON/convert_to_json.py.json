{
    "original_path": "convert_to_json.py",
    "content": "import os\nimport json\n\n# --- CONFIGURATION ---\nCODE_MANIFEST = \"PROJECT_MANIFEST.md\"\nSATELLITE_MANIFEST = \"MANIFEST3.md\"\nOUTPUT_DIR = \"ReviewableJSON\"\n# -------------------\n\ndef parse_manifest(file_path):\n    \"\"\"Parses a manifest file and extracts file paths.\"\"\"\n    if not os.path.exists(file_path):\n        print(f\"[WARNING] Manifest file not found: {file_path}\")\n        return []\n    \n    print(f\"[INFO] Parsing manifest: {file_path}\")\n    with open(file_path, 'r') as f:\n        lines = f.readlines()\n    \n    file_paths = []\n    for line in lines:\n        line = line.strip()\n        if line.startswith('- `') or line.startswith('*   `'):\n            path = line.split('`')[1]\n            if os.path.exists(path):\n                file_paths.append(path)\n            else:\n                print(f\"[WARNING] File not found, skipping: {path}\")\n    return file_paths\n\ndef create_json_backup(file_path, base_dir):\n    \"\"\"Creates a JSON backup of a single file.\"\"\"\n    try:\n        with open(file_path, 'r', encoding='utf-8') as f:\n            content = f.read()\n        \n        relative_path = os.path.relpath(file_path, base_dir)\n        output_path = os.path.join(OUTPUT_DIR, f\"{relative_path}.json\")\n        os.makedirs(os.path.dirname(output_path), exist_ok=True)\n        \n        backup_data = {\n            \"original_path\": file_path,\n            \"content\": content\n        }\n        \n        with open(output_path, 'w', encoding='utf-8') as f:\n            json.dump(backup_data, f, indent=4)\n        print(f\"[SUCCESS] Created backup: {output_path}\")\n    except Exception as e:\n        print(f\"[ERROR] Failed to process {file_path}: {e}\")\n\ndef main():\n    \"\"\"Main function to run the backup process.\"\"\"\n    print(\"--- Starting IRONCLAD Backup Protocol ---\")\n    if not os.path.exists(OUTPUT_DIR):\n        os.makedirs(OUTPUT_DIR)\n        print(f\"[INFO] Created output directory: {OUTPUT_DIR}\")\n\n    code_files = parse_manifest(CODE_MANIFEST)\n    satellite_files = parse_manifest(SATELLITE_MANIFEST)\n    \n    all_files = sorted(list(set(code_files + satellite_files)))\n    print(f\"[INFO] Found {len(all_files)} unique files across all manifests.\")\n\n    base_dir = os.getcwd()\n    for file_path in all_files:\n        create_json_backup(file_path, base_dir)\n    \n    print(\"--- IRONCLAD Backup Protocol Complete ---\")\n\nif __name__ == \"__main__\":\n    main()"
}