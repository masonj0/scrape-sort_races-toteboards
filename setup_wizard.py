# setup_wizard.py
# Interactive CLI to generate the .env configuration file.
import secrets
import os
from datetime import datetime

def run_wizard():
    """Guides the user through creating a .env file."""
    print("--- Fortuna Faucet Configuration Wizard ---")
    print("This will create a '.env' file with the necessary settings.")
    print("You can leave any optional values blank by pressing Enter.")
    print("-" * 40)

    if os.path.exists('.env'):
        overwrite = input("An existing .env file was found. Overwrite? (y/n): ").lower()
        if overwrite != 'y':
            print("Configuration skipped. Using existing .env file.")
            return

    api_key = secrets.token_urlsafe(32)
    betfair_username = input("Enter your Betfair username (optional): ")
    betfair_password = input("Enter your Betfair password (optional): ")
    postgres_url = input("Enter your PostgreSQL URL for the data warehouse (optional): ")

    env_content = [
        f"# Fortuna Faucet Environment Configuration",
        f"# Generated by setup_wizard.py on {datetime.now().isoformat()}",
        "",
        "# --- Core Settings ---",
        f"API_KEY={api_key}",
        "",
        "# --- Optional: Betfair Credentials ---",
        f"BETFAIR_USERNAME={betfair_username}",
        f"BETFAIR_PASSWORD={betfair_password}",
        "",
        "# --- Optional: Data Warehouse ---",
        f"POSTGRES_URL={postgres_url}",
        "",
        "# --- Default Settings ---",
        "REDIS_URL=redis://localhost",
        "LOG_LEVEL=INFO"
    ]

    try:
        with open('.env', 'w') as f:
            f.write('\n'.join(env_content))
        print("\n[SUCCESS] The .env file has been created successfully!")
        print("You can now run LAUNCH_FORTUNA.bat to start the application.")
    except IOError as e:
        print(f"\n[ERROR] Failed to write .env file: {e}")
        exit(1)

if __name__ == "__main__":
    run_wizard()